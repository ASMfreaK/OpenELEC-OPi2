Patch for generation of u-boot of the OrangePI 2

--- a/drivers/video_sunxi/sunxi_v3/de/lowlevel_sun8iw7/de_wb.c
+++ b/drivers/video_sunxi/sunxi_v3/de/lowlevel_sun8iw7/de_wb.c
@@ -272,20 +272,22 @@
 		wb_dev[sel]->bypass.dwval |= 0x00000001;
 	}
 	//Coarse scaling
+	cs_out_w0 = out_window_w << 1;
+	cs_out_h0 = out_window_h << 1;
 	if((crop_w > (out_window_w<<1))&&(crop_h > (out_window_h<<1)))
 	{
 		wb_dev[sel]->bypass.dwval |= 0x00000002;
 		wb_dev[sel]->cs_horz.dwval = crop_w |(out_window_w<<17);
 		wb_dev[sel]->cs_vert.dwval = crop_h |(out_window_h<<17);
-		cs_out_w0 = out_window_w<<1;
-		cs_out_h0 = out_window_h<<1;
+//		cs_out_w0 = out_window_w<<1;
+//		cs_out_h0 = out_window_h<<1;
 	}
 	if((crop_w > (out_window_w<<1))&&(crop_h <= (out_window_h<<1)))
 	{
 		wb_dev[sel]->bypass.dwval |= 0x00000002;
 		wb_dev[sel]->cs_horz.dwval = crop_w |(out_window_w<<17);
 		wb_dev[sel]->cs_vert.dwval = 0;
-		cs_out_w0 = out_window_w<<1;
+//		cs_out_w0 = out_window_w<<1;
 		cs_out_h0 = crop_h;
 	}
 	if((crop_w <= (out_window_w<<1))&&(crop_h > (out_window_h<<1)))
@@ -293,7 +295,7 @@
 		wb_dev[sel]->bypass.dwval |= 0x00000002;
 		wb_dev[sel]->cs_horz.dwval = 0;
 		wb_dev[sel]->cs_vert.dwval = crop_h |(out_window_h<<17);
-		cs_out_w0 = crop_w;
+//		cs_out_w0 = crop_w;
 		cs_out_h0 = out_window_h<<1;
 	}
 	if((crop_w <= (out_window_w<<1))&&(crop_h <= (out_window_h<<1)))
--- a/usb_sunxi/usb_burn.c
+++ b/usb_sunxi/usb_burn.c
@@ -1076,7 +1076,11 @@
 						case 1:				//小机端接收数据
 						{
 							//pburn_flash_sectors  = *(int *)(cbw->CBWCDB + 8);
-							pburn_flash_start    = *(int *)(cbw->CBWCDB + 4);
+//							pburn_flash_start    = *(int *)(cbw->CBWCDB + 4);
+							pburn_flash_start = cbw->CBWCDB[4] +
+								(cbw->CBWCDB[5] << 8) +
+								(cbw->CBWCDB[6] << 16) +
+								(cbw->CBWCDB[7] << 24);
 
 							trans_data.recv_size = cbw->dCBWDataTransferLength;
 							trans_data.act_recv_buffer = (uint)trans_data.base_recv_buffer;
@@ -1093,8 +1097,16 @@
 						{
 							uint start, sectors;
 
-							start   = *(int *)(cbw->CBWCDB + 4);		//读数据的偏移量
-							sectors = *(int *)(cbw->CBWCDB + 8);		//扇区数;
+//							start   = *((int *)(cbw->CBWCDB + 4));		//读数据的偏移量
+							start = cbw->CBWCDB[4] +
+								(cbw->CBWCDB[5] << 8) +
+								(cbw->CBWCDB[6] << 16) +
+								(cbw->CBWCDB[7] << 24);
+//							sectors = *((int *)(cbw->CBWCDB + 8));		//扇区数;
+							sectors = cbw->CBWCDB[8] +
+								(cbw->CBWCDB[9] << 8) +
+								(cbw->CBWCDB[10] << 16) +
+								(cbw->CBWCDB[11] << 24);
 
 							printf("start=%d, sectors=%d\n", start, sectors);
 
